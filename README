Recently, document will have .md extension...

This is Student Case Study about node.js + mongoDB by international company Atomia.
Here you can find simple restful/JSON web interface with following features:
- data representation in tree form with expansion/collapse option
- list all data in one collection
- find data by objectId
- add new JSON object with arbitrary number of attributes
- remove data by objectId

All request from client to server are performed using ajax.
On server side, we need NODE executable file, MongoDB instalation and node.js driver for MongoDB.

Further, you can see a brief description about
- what you need to download
- how to install required programs on local mashine with WINDOWS 7 operating system
to start up this interface and be capable to move on.

First of all, it is assumed that you have github account and GitBash installed on pc.
If you don't have jet, follow instructions on https://github.com/plans and then back.

Step 1. Downloading required programs

NODE
First we need node.js from http://nodejs.org/#download. 
There you can find under section "Other release files (like .exe and .pdb)" node.exe. 
Download wherever on local mashine.
It's good to know that you can adjust your computer to recognize command 'node' from any 
directory where you can find through win commander. For this option, follow the guidelines
Control Panel -> System -> Advanced system settings - > Environment variables -> 
and there you can edit variable 'Path' and just attach on start path to the file node.exe.
If you download file on D:/Node/node.exe, you will write out D:\Node;. Don't forget semicolon.

MongoDB
From http://www.mongodb.org/display/DOCS/Quickstart+Windows download appropriate version for
your system (32b/64b). There is no special installation, just unzip files in some folder.
You will find inside folder 'bin' files mongod.exe and mongo.exe. First of them is apllication 
which represents mongoDB server on localhost with port 27017. The other one is administrative shell 
that connects on mongoDB server which allows user to manage data through a series of commands. 




